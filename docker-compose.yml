x-app: &default-app
  build:
    context: "."
    target: "app"
    args:
      - "RAILS_ENV=${RAILS_ENV}"
      - "NODE_ENV=${NODE_ENV}"
  depends_on:
    - "postgres"
    - "redis"
  env_file:
    - ".env"
  restart: "${DOCKER_RESTART_POLICY}"
  stop_grace_period: "3s"
  tty: true

services:
  postgres:
    container_name: "db"
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS}"
          memory: "${DOCKER_POSTGRES_MEMORY}"
    env_file:
      - ".env"
    image: "postgres:latest"
    environment:
      POSTGRES_PASSWORD: password
    restart: "${DOCKER_RESTART_POLICY}"
    stop_grace_period: "3s"
    volumes:
      - "tryagain_postgres:/var/lib/postgresql/data"

  redis:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_REDIS_CPUS}"
          memory: "${DOCKER_REDIS_MEMORY}"
    env_file:
      - ".env"
    image: "redis:7.0.2-bullseye"
    restart: "${DOCKER_RESTART_POLICY}"
    stop_grace_period: "3s"
    volumes:
      - "tryagain_redis:/data"

  web:
    <<: *default-app
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS}"
          memory: "${DOCKER_WEB_MEMORY}"
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_WEB_PORT_FORWARD}:8000"
    command: "bundle exec puma -C ./app/config/puma.rb"
    # volumes:
    #   - "${DOCKER_WEB_VOLUME}:/app/public/assets"

  worker:
    <<: *default-app
    command: "bundle exec sidekiq -C config/sidekiq.yml"
    entrypoint: []
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WORKER_CPUS}"
          memory: "${DOCKER_WORKER_MEMORY}"
    # volumes:
    #   - "${DOCKER_WEB_VOLUME}:/app/public/assets"

  # cable:
  #   <<: *default-app
  #   command: "puma -p 28080 cable/config.ru"
  #   entrypoint: []
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "${DOCKER_CABLE_CPUS}"
  #         memory: "${DOCKER_CABLE_MEMORY}"
  #   ports:
  #     - "${DOCKER_CABLE_PORT_FORWARD}:28080"
    # volumes:
    #   - "${DOCKER_WEB_VOLUME}:/app/public/assets"

volumes:
  tryagain_postgres:
    external: true
  tryagain_redis:
    external: true
